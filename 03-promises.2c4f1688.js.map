{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEeC,SAASC,cAAc,SAC/BC,iBAAkB,UAAS,SAAAC,GAChCA,EAAEC,iBAEF,IAKIC,EALAC,EAAQ,EACNC,EAAaJ,EAAEK,cAAcC,SAASC,MAAMC,MAC5CC,EAAYT,EAAEK,cAAcC,SAASI,KAAKF,MAC5CD,EAAQE,EACNE,EAASX,EAAEK,cAAcC,SAASK,OAAOH,MAE/CI,YAAW,WACTC,YACGX,EAAaW,aAAY,WACxBN,EAAQE,EAAYN,IAASC,IAC7BD,GACaQ,GACXG,cAAcZ,GAOxB,SAAuBa,EAAUR,GACTS,KAAKC,SAAW,GAEpCC,EAAAvB,GAASwB,OAAOC,QAAQ,qBAAoCC,OAAfN,EAAS,QAAYM,OAANd,EAAM,QAElEW,EAAAvB,GAASwB,OAAOG,QAAQ,kBAAiCD,OAAfN,EAAS,QAAYM,OAANd,EAAM,QAV3DgB,CAAcpB,EAAOI,KACpBA,KACJH,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener(`submit`, e => {\n  e.preventDefault();\n\n  let count = 0;\n  const startDelay = e.currentTarget.elements.delay.value;\n  const stepDelay = e.currentTarget.elements.step.value;\n  let delay = stepDelay;\n  const amount = e.currentTarget.elements.amount.value;\n  let intervalId;\n  setTimeout(() => {\n    setInterval,\n      (intervalId = setInterval(function () {\n        delay = stepDelay * count + +startDelay;\n        count++;\n        if (count == amount) {\n          clearInterval(intervalId);\n        }\n        createPromise(count, delay);\n      }, delay));\n  }, startDelay);\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    Notiflix.Notify.success(`Fullfield promise ${position} in ${delay} ms`);\n  } else {\n    Notiflix.Notify.failure(`Reject promise ${position} in ${delay} ms`);\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","document","querySelector","addEventListener","e","preventDefault","intervalId","count","startDelay","currentTarget","elements","delay","value","stepDelay","step","amount","setTimeout","setInterval","clearInterval","position","Math","random","$parcel$interopDefault","Notify","success","concat","failure","$ce04d3a99e08e73b$var$createPromise"],"version":3,"file":"03-promises.2c4f1688.js.map"}