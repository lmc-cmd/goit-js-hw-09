{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEeC,SAASC,cAAc,SAC/BC,iBAAiB,UAAUC,IAChCA,EAAEC,iBAEFC,MAAQ,EACRC,WAAaH,EAAEI,cAAcC,SAASC,MAAMC,MAC5CC,UAAYR,EAAEI,cAAcC,SAASI,KAAKF,MAC1CD,MAAQE,UACR,IAAIE,EAASV,EAAEI,cAAcC,SAASK,OAAOH,MAE7CI,YAAW,KACTC,YACGC,WAAaD,aAAY,WACxBN,MAAQE,UAAYN,QAASC,WAC7BD,QACIA,OAASQ,GACXI,cAAcD,YAOxB,SAAuBE,EAAUT,GACTU,KAAKC,SAAW,GAEpCC,EAAAvB,GAASwB,OAAOC,QAAQ,qBAAqBL,QAAeT,QAE5DY,EAAAvB,GAASwB,OAAOE,QAAQ,kBAAkBN,QAAeT,QAVrDgB,CAAcpB,MAAOI,SACpBA,SACJH","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener(`submit`, e => {\n  e.preventDefault();\n\n  count = 0;\n  startDelay = e.currentTarget.elements.delay.value;\n  stepDelay = e.currentTarget.elements.step.value;\n  delay = stepDelay;\n  let amount = e.currentTarget.elements.amount.value;\n\n  setTimeout(() => {\n    setInterval,\n      (intervalId = setInterval(function () {\n        delay = stepDelay * count + +startDelay;\n        count++;\n        if (count == amount) {\n          clearInterval(intervalId);\n        }\n        createPromise(count, delay);\n      }, delay));\n  }, startDelay);\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    Notiflix.Notify.success(`Fullfield promise ${position} in ${delay} ms`);\n  } else {\n    Notiflix.Notify.failure(`Reject promise ${position} in ${delay} ms`);\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","document","querySelector","addEventListener","e","preventDefault","count","startDelay","currentTarget","elements","delay","value","stepDelay","step","amount","setTimeout","setInterval","intervalId","clearInterval","position","Math","random","$parcel$interopDefault","Notify","success","failure","$47d4ff9957288465$var$createPromise"],"version":3,"file":"03-promises.5565e6b1.js.map"}